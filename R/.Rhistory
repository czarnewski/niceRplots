layout.show()
layout.show()
layout.show()
max(M)
layout(mat = M)
layout.show(max(M))
layout(mat = M)
plot(1,1)
plot(1,1)
plot(1,1)
library(rafalib)
library(niceRplots)
layout(mat = M)
layout.show(max(M))
M <- matrix(c(1,3,2,2),nrow = 2,ncol = 2,byrow = T)
M
layout(mat = M)
layout.show(max(M))
M <- matrix(c(1,2,3,3),nrow = 2,ncol = 2,byrow = T)
M
layout(mat = M,heights = c(2,1))
layout.show(max(M))
layout(mat = M,heights = c(2,1),widths = c(4,1))
layout.show(max(M))
par(mfrow=c(2,2))
layout(mat = M,heights = c(2,1),widths = c(4,1))
# layout.show(max(M))
mypar()
plot(1,1)
layout(mat = M,heights = c(2,1),widths = c(4,1))
# layout.show(max(M))
par(mar=c(2,2,1,1))
plot(1,1)
layout(mat = M,heights = c(2,1),widths = c(2,1))
# layout.show(max(M))
par(mar=c(3,3,1,1))
plot(1,1)
add_letter("a")
par(mar=c(3,3,1,1))
plot(1,1)
add_letter("a")
plot(1,1)
add_letter("b")
plot(1,1
add_letter("c")
layout(mat = M,heights = c(2,1),widths = c(2,1))
# layout.show(max(M))
par(mar=c(3,3,1,1))
plot(1,1)
add_letter("a")
plot(1,1)
add_letter("b")
plot(1,1)
add_letter("c")
letters
M <- matrix(c(1,2,3,3),nrow = 2,ncol = 2,byrow = T)
layout(mat = M,heights = c(2,1),widths = c(2,1))
ll <- letters
ll
par(mar=c(5,5,2,1))
plot(1,1)
add_letter( ll[1] ); ll <- ll[-1]
par(mar=c(3,3,1,1))
plot(1,1)
add_letter( ll[1] ); ll <- ll[-1]
plot(1,1)
add_letter( ll[1] ); ll <- ll[-1]
M
M <- matrix(c(1,2,4,3,3,4),nrow = 2,ncol = 3,byrow = T)
M <- matrix(c(1,2,4,3,3,4),nrow = 2,ncol = 3,byrow = T)
layout(mat = M,heights = c(2,1),widths = c(2,1,1))
ll <- letters
par(mar=c(5,5,2,1))
plot(1,1)
add_letter( ll[1] ); ll <- ll[-1]
par(mar=c(3,3,1,1))
plot(1,1)
add_letter( ll[1] ); ll <- ll[-1]
plot(1,1)
add_letter( ll[1] ); ll <- ll[-1]
plot(1,1)
add_letter( ll[1] ); ll <- ll[-1]
mypar <- function(){
par(
mar = c(3,3,2,2),
mgp = c(1.5, 0.3, 0),
tcl = c(-0.2),
las = 1,
font.main = 1,
pch = 16)
}
#' Prints joint-matrices to the console.
#' @export
LM <- function(
X = NA,
R = 1,
C = 1,
B = T,
W = 1,
H = 1,
DN = NULL){
if (is.object(X) || !is.atomic(X))
X <- as.vector(X)
X <- as.character(X)
M <- base::.Internal(matrix(X, nrow = R, ncol = C, B, DN, missing(R),missing(C)))
attr(M,"W") <- rep(W,ncol(M))[1:ncol(M)]
attr(M,"H") <- rep(H,nrow(M))[1:nrow(M)]
return(M)
}
#' Prints joint-matrices to the console.
#' @export
#' @param
#' @example
#' # Create a layout matrix and visualise it
#' A <- LM( X=1:6 , C=2 , W=c(3,4) , H=c(3,2,7) )
#' vis(A)
vis <- function(X){
attr(X,"H") <- round(attr(X,"H"),2)
attr(X,"W") <- round(attr(X,"W"),2)
sprintf("% s", c("1","2") )
if(nrow(X)==1){
x <- paste0( c('\n    ',"[",X[1,],"]",'(',attr(X,"H")[1],')' ))
cat(x)
} else {
x <- paste0( c('\n    ',"⎡",X[1,],"⎤",'⎛',attr(X,"H")[1],'⎞' ))
cat(x)
if(nrow(X)>2){
for(i in 2:(nrow(X)-1) ){
x <- paste0( c('\n    ',"⎥",X[i,],"⎥",'⎥',attr(X,"H")[i],'⎥' ))
cat(x)
}
}
x <- paste0( c('\n    ',"⎣",X[nrow(X),],"⎦",'⎝',attr(X,"H")[nrow(X)],'⎠' ))
cat(x)
}
x <- paste0( c('\n    ',"(",attr(X,"W"),")\n" ))
cat(x)
cat('\n')
}
select <- function(X, rows=NULL, cols=NULL, pattern=NULL, inverse=FALSE){
M <- X
if(!is.null(pattern)){
sel <- matrix(M %in% pattern,nrow = nrow(M),ncol = ncol(M))
if( inverse ){ sel <- !sel }
cc <- colSums( (sel)*1 )>0
rr <- rowSums( (sel)*1 )>0
M <- matrix( X[sel] , nrow = sum(rr) , ncol = sum(cc) )
attr(M,"W") <- attr(X,"W")[cc]
attr(M,"H") <- attr(X,"H")[rr]
}
if( !is.null(rows) ) {
tmp <- M
M <- matrix( M[rows,] , nrow = length(rows), ncol = ncol(M) )
attr(M,"W") <- attr(tmp,"W")
attr(M,"H") <- attr(tmp,"H")[rows]}
if( !is.null(cols) ) {
tmp <- M
M <- matrix( M[,cols] , nrow = nrow(M) , ncol = length(cols) )
attr(M,"W") <- attr(tmp,"W")[cols]
attr(M,"H") <- attr(tmp,"H")
}
return( M )
}
M
B <- LM( X=c(1,"A",2,"A") , C=2 , H=c(1,3) )
B <- LM( X=c(1,"A",2,"A") , C=2 , H=c(1,3) )
vis(B)
C <- LM( X=1:6 , C=2 , W=c(3,4) , H=c(3,2,7) )
vis(C)
q0 <- C
q1 <- A
# Expand on the rows (height)
b0 <- attr(A,"H")
e0 <- attr(C,"H")
bp <- c(0,cumsum(b0)/sum(b0))
ep <- c(0,cumsum(e0)/sum(e0))
uu <- sort(unique(c(bp,ep)))[-1]
o1 <- (1:(length(bp[-1])))[as.numeric(cut(x = uu, breaks = bp))]
o2 <- (1:(length(ep[-1])))[as.numeric(cut(x = uu, breaks = ep))]
q0 <- select(X = q0, rows = o2)
q1 <- select(X = q1, rows = o1)
# Expand on the columns (widths)
b1 <- attr(A,"W")
e1 <- attr(C,"W")
bp <- c(0,cumsum(b1)/sum(b1))
ep <- c(0,cumsum(e1)/sum(e1))
uu <- sort(unique(c(bp,ep)))[-1]
o3 <- (1:(length(bp[-1])))[as.numeric(cut(x = uu, breaks = bp))]
o4 <- (1:(length(ep[-1])))[as.numeric(cut(x = uu, breaks = ep))]
q2 <- select(X = q0, cols = o4)
q3 <- select(X = q1, cols = o3)
A <- select(B, pattern = "A")
vis(A)
vis(B)
# Define variables to iterate over
q0 <- C
q1 <- A
# Expand on the rows (height)
b0 <- attr(A,"H")
e0 <- attr(C,"H")
bp <- c(0,cumsum(b0)/sum(b0))
ep <- c(0,cumsum(e0)/sum(e0))
uu <- sort(unique(c(bp,ep)))[-1]
o1 <- (1:(length(bp[-1])))[as.numeric(cut(x = uu, breaks = bp))]
o2 <- (1:(length(ep[-1])))[as.numeric(cut(x = uu, breaks = ep))]
q0 <- select(X = q0, rows = o2)
q1 <- select(X = q1, rows = o1)
# Expand on the columns (widths)
b1 <- attr(A,"W")
e1 <- attr(C,"W")
bp <- c(0,cumsum(b1)/sum(b1))
ep <- c(0,cumsum(e1)/sum(e1))
uu <- sort(unique(c(bp,ep)))[-1]
o3 <- (1:(length(bp[-1])))[as.numeric(cut(x = uu, breaks = bp))]
o4 <- (1:(length(ep[-1])))[as.numeric(cut(x = uu, breaks = ep))]
q2 <- select(X = q0, cols = o4)
q3 <- select(X = q1, cols = o3)
M <- B
pattern <- "A"
sel <- matrix(M %in% pattern,nrow = nrow(M),ncol = ncol(M))
cc <- colSums( (sel)*1 ) > 0
rr <- rowSums( (sel)*1 ) > 0
ci <- 1:length(cc)
ri <- 1:length(rr)
ec <- c(ci[!cc],(min(ci[cc])+o3-1))
er <- c(ri[!rr],(min(ri[rr])+o1-1))
wo <- c(attr(M,"W")[!cc], attr(q2,"W")/sum(attr(q3,"W")) )
ho <- c(attr(M,"H")[!rr], attr(q2,"H")/sum(attr(q3,"H")) )
# Expand rows
M <- select(X = B, cols = ec[order(ec)], rows = er[order(er)])
attr(M,"W") <- wo
attr(M,"H") <- ho
M
M[M == "A"] <- q2
vis(M)
vis(B)
vis(C)
q2
q3
wo
attr(M,"W")[!cc]
cc
attr(q2,"W")
attr(M,"W")
M
ec
er
ec <- sort(c(ci[!cc],(min(ci[cc])+o3-1)))
er <- sort(c(ri[!rr],(min(ri[rr])+o1-1)))
ec
er
attr(q2,"W")
attr(q3,"W")
attr(q2,"W")
sum(attr(q3,"W")
sum(attr(q3,"W"))
attr(q3,"W")
wo <- c(attr(M,"W")[!cc], attr(q2,"W")/sum(attr(q3,"W")[cc]) )
ho <- c(attr(M,"H")[!rr], attr(q2,"H")/sum(attr(q3,"H")[cc]) )
# Expand rows
M <- select(X = B, cols = ec[order(ec)], rows = er[order(er)])
attr(M,"W") <- wo
attr(M,"H") <- ho
M[M == "A"] <- q2
vis(M)
wo <- c(attr(M,"W")[!cc], attr(q2,"W")/sum(attr(q3,"W")[cc]) )
ho <- c(attr(M,"H")[!rr], attr(q2,"H")/sum(attr(q3,"H")[rr]) )
# Expand rows
M <- select(X = B, cols = ec[order(ec)], rows = er[order(er)])
attr(M,"W") <- wo
attr(M,"H") <- ho
M[M == "A"] <- q2
vis(M)
rr
cc
B
# Expand rows
M <- select(X = B, cols = ec[order(ec)], rows = er[order(er)])
M
ec <- sort(c(ci[!cc],(min(ci[cc])+o3-1)))
er <- sort(c(ri[!rr],(min(ri[rr])+o1-1)))
wo <- c(attr(M,"W")[!cc], attr(q2,"W")/sum(attr(q3,"W")[cc]) )
ho <- c(attr(M,"H")[!rr], attr(q2,"H")/sum(attr(q3,"H")[rr]) )
ec
er
wo
attr(M,"W")[!cc]
cc
M <- B
pattern <- "A"
sel <- matrix(M %in% pattern,nrow = nrow(M),ncol = ncol(M))
cc <- colSums( (sel)*1 ) > 0
rr <- rowSums( (sel)*1 ) > 0
ci <- 1:length(cc)
ri <- 1:length(rr)
ec <- sort(c(ci[!cc],(min(ci[cc])+o3-1)))
er <- sort(c(ri[!rr],(min(ri[rr])+o1-1)))
wo <- c(attr(M,"W")[!cc], attr(q2,"W")/sum(attr(q3,"W")[cc]) )
ho <- c(attr(M,"H")[!rr], attr(q2,"H")/sum(attr(q3,"H")[rr]) )
wo
ho
M <- B
pattern <- "A"
sel <- matrix(M %in% pattern,nrow = nrow(M),ncol = ncol(M))
cc <- colSums( (sel)*1 ) > 0
rr <- rowSums( (sel)*1 ) > 0
ci <- 1:length(cc)
ri <- 1:length(rr)
ec <- sort(c(ci[!cc],(min(ci[cc])+o3-1)))
er <- sort(c(ri[!rr],(min(ri[rr])+o1-1)))
wo <- c(attr(M,"W")[!cc], attr(q2,"W")/sum(attr(q3,"W")[cc])*sum(attr(q2,"W")) )
ho <- c(attr(M,"H")[!rr], attr(q2,"H")/sum(attr(q3,"H")[rr])*sum(attr(q2,"H")) )
wo
ho
M <- B
pattern <- "A"
sel <- matrix(M %in% pattern,nrow = nrow(M),ncol = ncol(M))
cc <- colSums( (sel)*1 ) > 0
rr <- rowSums( (sel)*1 ) > 0
ci <- 1:length(cc)
ri <- 1:length(rr)
ec <- sort(c(ci[!cc],(min(ci[cc])+o3-1)))
er <- sort(c(ri[!rr],(min(ri[rr])+o1-1)))
wo <- c(attr(M,"W")[!cc], attr(q2,"W")*sum(attr(q3,"W")[cc])/sum(attr(q2,"W")) )
ho <- c(attr(M,"H")[!rr], attr(q2,"H")*sum(attr(q3,"H")[rr])/sum(attr(q2,"H")) )
wo
M <- B
pattern <- "A"
sel <- matrix(M %in% pattern,nrow = nrow(M),ncol = ncol(M))
cc <- colSums( (sel)*1 ) > 0
rr <- rowSums( (sel)*1 ) > 0
ci <- 1:length(cc)
ri <- 1:length(rr)
ec <- sort(c(ci[!cc],(min(ci[cc])+o3-1)))
er <- sort(c(ri[!rr],(min(ri[rr])+o1-1)))
wo <- c(attr(M,"W")[!cc], attr(q2,"W")/sum(attr(q3,"W")[cc]) )
ho <- c(attr(M,"H")[!rr], attr(q2,"H")/sum(attr(q3,"H")[rr]) )
wo
ho
B
attr(q2,"H")
M <- B
pattern <- "A"
sel <- matrix(M %in% pattern,nrow = nrow(M),ncol = ncol(M))
cc <- colSums( (sel)*1 ) > 0
rr <- rowSums( (sel)*1 ) > 0
ci <- 1:length(cc)
ri <- 1:length(rr)
ec <- sort(c(ci[!cc],(min(ci[cc])+o3-1)))
er <- sort(c(ri[!rr],(min(ri[rr])+o1-1)))
wo <- c(attr(M,"W")[!cc], attr(q2,"W") )
ho <- c(attr(M,"H")[!rr], attr(q2,"H") )
wo
ho
M <- select(X = B, cols = ec[order(ec)], rows = er[order(er)])
attr(M,"W") <- wo
attr(M,"H") <- ho
M[M == "A"] <- q2
vis(M)
vis(B)
vis(C)
M <- B
pattern <- "A"
sel <- matrix(M %in% pattern,nrow = nrow(M),ncol = ncol(M))
cc <- colSums( (sel)*1 ) > 0
rr <- rowSums( (sel)*1 ) > 0
ci <- 1:length(cc)
ri <- 1:length(rr)
ec <- sort(c(ci[!cc],(min(ci[cc])+o3-1)))
er <- sort(c(ri[!rr],(min(ri[rr])+o1-1)))
wo <- c(attr(M,"W")[!cc], attr(q2,"W") )
ho <- c(attr(M,"H")[!rr], attr(q2,"H") )
# Expand rows
M <- select(X = B, cols = ec[order(ec)], rows = er[order(er)])
attr(M,"W") <- wo
attr(M,"H") <- ho
M[M == "A"] <- q2
vis(M)
vis(B)
vis(C)
combine <- function( M1 , M2 , pattern = NULL ){
A <- select(M1, pattern = pattern)
# Define variables to iterate over
q0 <- M2
q1 <- A
# Expand on the rows (height)
b0 <- attr(A,"H")
e0 <- attr(M2,"H")
bp <- c(0,cumsum(b0)/sum(b0))
ep <- c(0,cumsum(e0)/sum(e0))
uu <- sort(unique(c(bp,ep)))[-1]
o1 <- (1:(length(bp[-1])))[as.numeric(cut(x = uu, breaks = bp))]
o2 <- (1:(length(ep[-1])))[as.numeric(cut(x = uu, breaks = ep))]
q0 <- select(X = q0, rows = o2)
q1 <- select(X = q1, rows = o1)
# Expand on the columns (widths)
b1 <- attr(A,"W")
e1 <- attr(M2,"W")
bp <- c(0,cumsum(b1)/sum(b1))
ep <- c(0,cumsum(e1)/sum(e1))
uu <- sort(unique(c(bp,ep)))[-1]
o3 <- (1:(length(bp[-1])))[as.numeric(cut(x = uu, breaks = bp))]
o4 <- (1:(length(ep[-1])))[as.numeric(cut(x = uu, breaks = ep))]
q2 <- select(X = q0, cols = o4)
q3 <- select(X = q1, cols = o3)
M <- B
sel <- matrix(M %in% pattern,nrow = nrow(M),ncol = ncol(M))
cc <- colSums( (sel)*1 ) > 0
rr <- rowSums( (sel)*1 ) > 0
ci <- 1:length(cc)
ri <- 1:length(rr)
ec <- sort(c(ci[!cc],(min(ci[cc])+o3-1)))
er <- sort(c(ri[!rr],(min(ri[rr])+o1-1)))
wo <- c(attr(M,"W")[!cc], attr(q2,"W") )
ho <- c(attr(M,"H")[!rr], attr(q2,"H") )
# Expand rows
M <- select(X = B, cols = ec[order(ec)], rows = er[order(er)])
attr(M,"W") <- wo
attr(M,"H") <- ho
M[M == pattern] <- q2
return(M)
}
combine(M1 = B,M2 = C,pattern = "A")
rafalib::mypar
mypar <- function(
a=1,
b=1,
cex.lab = .8,
cex.axis = .8,
cex.main = 1,
font.main = 1,
mar = c(2.5, 2.5, 1.6, 1.1),
mgp = c(1.5, 0.3, 0),
tcl = -0.2,
las = 1, ...  ){
par(cex.lab = cex.lab, cex.axis = cex.axis, cex.main = cex.main,
font.main = font.main, mar = mar, mgp = mgp, tcl = tcl, las = las)
par(mfrow = c(a, b), ...)
}
mypar()
plot(11:20,1:10,main="lfjasflajs",frame=F)
mypar <- function(
a=1,
b=1,
cex.lab = 1,
cex.axis = 1,
cex.main = 1,
font.main = 1,
mar = c(2.5, 2.5, 1.6, 1.1),
mgp = c(1.5, 0.3, 0),
tcl = -0.2,
las = 1, ...  ){
par(cex.lab = cex.lab, cex.axis = cex.axis, cex.main = cex.main,
font.main = font.main, mar = mar, mgp = mgp, tcl = tcl, las = las)
par(mfrow = c(a, b), ...)
}
mypar()
plot(11:20,1:10,main="lfjasflajs",frame=F)
mypar <- function(
a=1,
b=1,
cex.lab = 1,
cex.axis = 1,
cex.main = 1,
font.main = 1,
mar = c(2.5, 2.5, 1.6, 1.1),
mgp = c(1.2, 0.3, 0),
tcl = -0.2,
las = 1, ...  ){
par(cex.lab = cex.lab, cex.axis = cex.axis, cex.main = cex.main,
font.main = font.main, mar = mar, mgp = mgp, tcl = tcl, las = las)
par(mfrow = c(a, b), ...)
}
mypar()
plot(11:20,1:10,main="lfjasflajs",frame=F)
mypar <- function(
a=1,
b=1,
cex.lab = 1,
cex.axis = 1,
cex.main = 1,
font.main = 1,
mar = c(2.5, 2.5, 1.6, 1.1),
mgp = c(1.1, 0.3, 0),
tcl = -0.2,
las = 1, ...  ){
par(cex.lab = cex.lab, cex.axis = cex.axis, cex.main = cex.main,
font.main = font.main, mar = mar, mgp = mgp, tcl = tcl, las = las)
par(mfrow = c(a, b), ...)
}
mypar()
plot(11:20,1:10,main="lfjasflajs",frame=F)
mypar <- function(
R = 1,
C = 1,
cex.lab = 1,
cex.axis = 1,
cex.main = 1,
font.main = 1,
mar = c(2.5, 2.5, 1.6, 1.1),
mgp = c(1.1, 0.3, 0),
tcl = -0.2,
las = 1, ...  ){
par(cex.lab = cex.lab, cex.axis = cex.axis, cex.main = cex.main,
font.main = font.main, mar = mar, mgp = mgp, tcl = tcl, las = las)
par(mfrow = c(R, C), ...)
}
plot(11:20,1:10,main="lfjasflajs")
getOption("viewer")
viewer("https://export.uppmax.uu.se/snic2022-23-113/hdca_webdev/03_interactive_svg/")
viewer <- getOption("viewer")
viewer("https://export.uppmax.uu.se/snic2022-23-113/hdca_webdev/03_interactive_svg/")
